
spring:
   datasource:
        name: test
        url: jdbc:mysql://47.99.61.151:3306/migo-security?useUnicode=true&characterEncoding=UTF-8
        username: root
        password: 123456
        # 使用druid数据源
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: org.gjt.mm.mysql.Driver


        # 下面为连接池的补充设置，应用到上面所有数据源中
        # 初始化大小，最小，最大
        initialSize: 5
        minIdle: 5
        maxActive: 20
        # 配置获取连接等待超时的时间
        maxWait: 60000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        timeBetweenEvictionRunsMillis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        minEvictableIdleTimeMillis: 30000
        validationQuery: SELECT 1 FROM DUAL
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        # 打开PSCache，并且指定每个连接上PSCache的大小
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        filters: stat,slf4j
        logSlowSql: true
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
        # 合并多个DruidDataSource的监控数据
        #useGlobalDataSourceStat: true



cache:
    type: redis
redis:
    host: 47.99.61.151
    port: 6379
    timeout: 1000
    database: 0
    jedis:
      pool:
        max-active: 10
        max-idle: 8
        min-idle: 2
        max-wait: 100



#pagehelper分页插件
pagehelper:
#  helperDialect: com.github.pagehelper.dialect.helper.MySqlDialect
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql
  pageSizeZero: true



#自定义属性
ymlmanager:
  mapProps:
    wjtFilePath: D:/token/ #token存放地址 暂时不用了
    aesSecret: se%~!@#$%^**(& #aes加密
    dataFilePath: /usr/local/imrFiles/  #文件上传地址
    urlPath: /imrFiles/ #用来转换静态文件的url路径 需要改Tomcat的 server.xml
    flag: (&&)  #用户id加密+flag+uuid生成token返回给客户端 flag用来解析加密的id
    docTemPath: static/doc/record.docx   #word文档的模板路径放在静态文件里


